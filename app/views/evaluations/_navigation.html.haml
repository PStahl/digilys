- active      ||= nil
- only_return ||= false

- content_for :title do
  = t(:"evaluations.titles.#{evaluation.type}s.text", suite: evaluation.suite.try(:name))

%ul.nav.nav-tabs.nav-split
  - if !only_return
    %li.primaries
      %ul.nav.nav-tabs.nav-split
        - if evaluation.type.template?
          %li
            %a{href:template_evaluations_path()}= t(:".index_action")
          %li{class: active_if(active == :new)}
            %a{href:new_template_evaluation_path()}= t(:".new_action")

        - elsif evaluation.type.suite? && can?(:change, evaluation.suite)
          %li{class: active_if(active == :new)}
            %a{href:new_suite_evaluation_path(evaluation.suite)}= t(:".new_action")

        - elsif evaluation.type.generic?
          %li
            %a{href:generic_evaluations_path()}= t(:".index_action")
          %li{class: active_if(active == :new)}
            %a{href:new_generic_evaluation_path()}= t(:".new_action")

        - if !evaluation.new_record?
          %li{class: active_if(active == :show)}
            %a{href:evaluation_path(evaluation)}= t(:".show_action")

        - if evaluation.type.suite?
          %li
            %a{href:suite_path(evaluation.suite)}= t(:".return_to_suite")

    - if !evaluation.new_record?
      %li.secondaries
        %ul.nav.nav-tabs.nav-split
          - if can?(:edit, evaluation)
            %li{class: active_if(active == :edit)}
              %a{href:edit_evaluation_path(evaluation)}= t(:".edit_action")
          - if can?(:destroy, evaluation)
            %li{class: active_if(active == :destroy)}
              %a{href:confirm_destroy_evaluation_path(evaluation)}= t(:".destroy_action")

  - else
    %li.primaries
      %ul.nav.nav-tabs.nav-split
        %li
          %a{href:suite_path(evaluation.suite)}= t(:".return_to_suite")

